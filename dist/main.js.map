{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js_project/./src/scripts/list.js","webpack://js_project/./src/scripts/button.js","webpack://js_project/./src/scripts/us_map.js","webpack://js_project/./src/scripts/info.js","webpack://js_project/./src/index.js","webpack://js_project/./src/scripts/title.js","webpack://js_project/./src/scripts/fetch.js"],"sourcesContent":["export default class List {\n    constructor(obj, displayStatus) {\n        this.obj = obj;\n\n        this.obj.style.display = displayStatus\n        // this.ele.innerHTML = \"It's Alive!!!\";\n        this.clearList = this.clearList.bind(this);\n        this.toggleHide = this.toggleHide.bind(this);\n\n    //     this.ele.addEventListener(\"click\", this.handleClick);\n    }\n    toggleHide(){\n        if (this.obj.style.display === \"none\") {\n          this.obj.style.display = \"block\";\n        } else {\n          this.obj.style.display = \"none\";\n        }\n    }\n\n    appendChild(childNode) {\n      this.obj.appendChild(childNode)\n    }\n\n    clearList() {\n      while (this.obj.firstChild) {\n          this.obj.removeChild(this.obj.firstChild)\n      }\n    }\n}","import List from \"./list\"\n\nexport default class Button {\n    constructor(obj, text, displayStatus) {\n        this.obj = obj;\n        this.obj.innerHTML = `${text}`;\n        this.obj.setAttribute('class',displayStatus)\n        // debugger\n        this.obj.style.display = \"inline\"\n        this.handleClick = this.handleClick.bind(this);\n        this.obj.addEventListener(\"click\", this.handleClick);\n    }\n\n    greyOut() {\n        this.obj.removeEventListener(\"click\",this.handleClick)\n        this.obj.setAttribute('class','greyedOut')\n    }\n\n    setActive() {\n        this.obj.addEventListener(\"click\", this.handleClick);\n        this.obj.setAttribute('class','normal')\n    }\n\n    handleClick() {\n        // let state_issues_list = new List(document.getElementById('state_issues_list'),\"block\")\n        const issues_list = new List(document.getElementById(\"issues_list\"), 'block')\n        // state_issues_list.toggleHide()\n        this.greyOut();\n        myChart.style.display = 'none'\n        document.querySelectorAll('path').forEach(state => state.style.fill = '#f9f9f9')\n\n        \n        //     debugger\n        //     let state_issues_list = document.querySelector('state_issues_list')\n        //     while (state_issues_list.obj.firstChild) {\n        //         this.obj.removeChild(state_issues_list.obj.firstChild)\n        //     }\n        //   }\n    }\n        // let state_issues_list = document.getElementById('state_issues_list')\n\n}","import {getStateData} from \"./fetch\"\nimport List from \"./list\"\nimport Button from './button'\nconst issues_list = new List(document.getElementById(\"issues_list\"),\"block\")\n// const state_issues_list = new List(document.getElementById('state_issues_list'),\"block\")\n\n// const toggleHide = function(target){\n//     if (target.style.display === \"none\") {\n//       target.style.display = \"block\";\n//     } else {\n//       target.style.display = \"none\";\n//     }\n// }\n\nlet grapharea = document.getElementById('myChart');\nlet myChart = new Chart(grapharea, {type:'bar'});\nmyChart.globalCompositeOperation='destination-over';\ngrapharea.style.display = 'none';\n\n\nlet loadmap = function() {d3.xml(\"https://aa-lgbtq-rights-map.s3.us-east-2.amazonaws.com/images/us.svg\")\n  .then(data => {\n    d3.select(\"#us_map\")\n    .node().append(data.documentElement)\n\n    d3.selectAll('path').on('click',() =>{\n        issues_list.obj.style.display = 'none';\n        grapharea.style.display = 'block';\n        let state_id = d3.event.target.id;\n        // state_issues_list.clearList();\n        let back_button = new Button(document.getElementById(\"back_button\"), 'Clear Selection', 'greyedOut')\n        back_button.setActive();\n        getStateData(state_id)\n          .then(data =>{\n            let state_name = data.data.state.name\n            let state_description = data.data.state.score.description // (e.g. \"High Priority to Achieve Basic Equality\")\n            let state_kind = data.data.state.score.kind\n            let state_issues = data.data.state.issues.map((issue, idx) => {return {x:idx,y:issue.value, policy: issue.policy}})\n\n            // state_issues_list.appendChild(document.createTextNode(state_name))\n            myChart.destroy()\n            Chart.defaults.font.size = 16;\n            myChart = new Chart(grapharea, {\n              type: 'bar',\n              data: {\n                labels: data.data.state.issues.map(issue => issue.name),\n                datasets: [{\n                  data: state_issues,\n                  borderWidth: 1,\n                  backgroundColor: state_issues.map(el => setColor(el.y))\n                }]\n              },\n              options: {\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false\n                  },\n                  title: {\n                    display: true,\n                    text: `Score on each issue for state of ${state_name}`\n                  },\n                  tooltip: {\n                    displayColors: false,\n                    callbacks: {\n                      label: ((tooltipItem,data) =>{\n                          return `Policy: ${tooltipItem.raw.policy}`\n                      })\n                    }\n                  }\n                },\n                scales: {\n                  y: {\n                    beginAtZero: true\n                  }\n                }\n              }\n            });\n            // Chart.defaults.global.defaultFontColor = \"#000000\";\n\n        })\n\n        // GOAL: trying to hide all other states when a state is click.\n        // RESULT: Not working as of Sunday 7/2 6:00 PM\n\n        // document.querySelectorAll('path').forEach(state => {\n        //   if (state.id !== state_id) {\n        //     state.style.display = 'none !important'\n        //   }\n        //   debugger\n        //   console.log('test')\n        // })\n        // state_issues_list.toggleHide()\n    })\n  })\n}\n\nlet setColor = function(score) {\n    if (score <0) {\n        return '#F75B5B'\n    } else if (score === 0) {\n      return '#5d5c61'\n    } else if (score === 1 || score === 1) {\n        return '#B3E5A2'\n    } else if (score > 1) {\n        return '#689D55'\n    }\n}\n\nexport {loadmap,setColor}\n","export default class Info {\n    constructor(ele) {\n        this.ele = ele\n        this.ele.style.fontFamily = 'sans-serif';\n        this.ele.innerHTML = `<span class='close' id='close1'>X</span><br><p>Thank you for visiting this page! This is a chart showing the status of LGBTQ+ rights throughout the US.\n        My goal is to bring awareness to the challenges (and triumphs) queer people have achieved, and will continue to achieve...\n        to facilitate open discussions and set the groundwork for further action. All data comes from the HRC.\n        </p>\n        \n        <p><b><u>Instructions</b></u>:</p>\n        \n        <p>A list of 11 issues is on the right. Click on any issue to see how states score on that particular issue.\n        States are color-coded according to their score:\n        <ul>\n            <li>Red: <0</li>\n            <li>Grey: 0 (no data on that issue in that state)</li>\n            <li>Light Green: 1-2</li>\n            <li>Dark Green: >2</li>\n        </ul>\n        </p>\n        \n        <p>To see a state's scores on all issues, click on that state. The issues will pop up in a bar chart on the right.\n        The bar charts use the same color-coding system (no bar will appear if the score is 0, i.e. if there is no info\n            in that state on that issue).\n        \n        Click \"Clear Selection\" to clear and start over at any point.\n        </p>\n        \n        <p>Please visit my links at the top-right to see more about me!<br>\n            ~ Joe\n        </p>\n        \n        <span class='close' id='close2'>Continue to Map</span>`\n\n        this.handleClick = this.handleClick.bind(this);\n        [...new Set(document.getElementsByClassName(\"close\"))].forEach(el =>el.addEventListener(\"click\", this.handleClick));\n    }\n\n    handleClick() {this.ele.setAttribute('class','hidden')}\n}\n\n\n","import Button from \"./scripts/button\"\nimport Title from \"./scripts/title\"\nimport List from \"./scripts/list\"\nimport Issue from \"./scripts/issues_chart\"\nimport {getIssuesData,getStateData} from \"./scripts/fetch\"\nimport Navbar from \"./scripts/navbar\"\nimport {loadmap} from \"./scripts/us_map\"\nimport Info from \"./scripts/info\"\n\nlet setColor = function(score) {\n    if (score <0) {\n        return '#F75B5B'\n    } else if (score === 0) {\n      return '#989898'\n    } else if (score === 1 || score === 1) {\n        return '#B3E5A2'\n    } else if (score > 1) {\n        return '#689D55'\n    }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    const title = new Title (document.getElementById(\"title\"))\n\n    // debugger\n    let back_button = new Button(document.getElementById(\"back_button\"), 'Clear Selection', 'greyedOut')\n\n    const issues_list = new List(document.getElementById(\"issues_list\"), 'block')\n\n    const info = new Info(document.getElementById('info'))\n    \n    // const state_issues_list = new List(document.getElementById(\"state_issues_list\"), 'none')\n\n    // const navbar = new Navbar(document.getElementById('navbar'))\n\n    loadmap();\n})\n\n// let grapharea = document.getElementById('myChart').getContext('2d');\n// let myChart = new Chart(grapharea, {type:'bar'})\n\ngetIssuesData()\n    .then(data => { \n\n        data.data.issues.edges.forEach(obj => {\n            let li = document.createElement(\"li\");\n            li.setAttribute('id',`${obj.node.id}`);\n            let textNode = document.createTextNode(obj.node.name)\n            li.appendChild(textNode)\n            li.addEventListener(\"click\", e => {obj.node.states.forEach(state => {\n                let pathId = document.querySelector(`#${state.id}`)\n                pathId.setAttribute('data-value',`${state.value}`)\n                pathId.setAttribute('data-policy',`${state.policy}`)\n                pathId.style.fill = setColor(state.value)\n                let back_button = new Button(document.getElementById(\"back_button\"), 'Clear Selection', 'greyedOut')\n                back_button.setActive()\n            })\n            })\n            issues_list.appendChild(li)\n        })\n        \n    })\n    .catch(error => {\n        console.error('There has been a problem with your fetch operation: ', error);\n    });\n","import List from './list'\nclass Title {\n    constructor(ele) {\n        this.ele = ele;\n        this.ele.innerHTML = \"<h1>LGBTQ+ Rights Across the US</h1><br><br><br><span>No Pride For Some of Us Without Liberation For All of Us</span>\";\n        this.ele.style.width = 'auto';\n        this.ele.style.height = '100px';\n        // this.ele.style.display = 'flex';\n        // this.ele.style.justifyContent = 'space-around';\n        this.ele.style.padding = '0 0 30 0'\n        this.ele.style.textAlign = 'center'\n        this.ele.style.fontSize = '26'\n\n        let instructions = document.createElement('div')\n        instructions.setAttribute('id','instructions')\n        instructions.innerHTML = 'i'\n        instructions.addEventListener('click',() =>{\n            let info = document.getElementById('info');\n            info.removeAttribute('class','hidden')\n        })\n        instructions.style.cssFloat = 'right'\n\n        this.ele.appendChild(instructions)\n\n        let github = document.createElement('div')\n        github.setAttribute('id','github')\n        github.innerHTML = '<a href=\"https://github.com/jprandazzo\" target=\"_blank\"><img src=\"https://aa-lgbtq-rights-map.s3.us-east-2.amazonaws.com/images/github-mark.svg\"></a>'\n        github.style.cssFloat = 'right'\n\n        this.ele.appendChild(github)\n\n        let linkedin = document.createElement('div')\n        linkedin.setAttribute('id','linkedin')\n        linkedin.innerHTML = '<a href=\"https://linkedin.com/in/jprandazzo\" target=\"_blank\"><img src=\"https://aa-lgbtq-rights-map.s3.us-east-2.amazonaws.com/images/LI2.png\"></a>'\n        linkedin.style.cssFloat = 'right'\n\n        this.ele.appendChild(linkedin)\n    }\n\n}\n\nexport default Title;","\nasync function getIssuesData(url = 'https://hrc-lgbtq-2020.herokuapp.com/api') {\n\n    const response = await fetch(url, \n    {\n        method: \"POST\",\n        body: JSON.stringify({\"query\":\"query issues ($after: String, $before: String, $first: Int, $last: Int) {\\n    issues (after: $after, before: $before, first: $first, last: $last) {\\n        pageInfo {\\n            hasPreviousPage\\n            hasNextPage\\n            startCursor\\n            endCursor\\n        }\\n        edges {\\n            node {\\n                id\\n                name\\n                states {\\n                    id\\n                    name\\n                    policy\\n                    value\\n                }\\n            }\\n            cursor\\n        }\\n    }\\n}\",\"variables\":{}})\n    });\n\n    if (!response.ok) {\n        throw new Error('Network response was not ok');\n    }\n\n    let issuesData = await response.json();\n\n    return issuesData\n}\n\nasync function getStateData(state_id,url = 'https://hrc-lgbtq-2020.herokuapp.com/api') {\n    \nconst response2 = await fetch(url, \n    {\n        method: \"POST\",\n        body: JSON.stringify({\"query\":\"query state ($id: String!) {\\n    state (id: $id) {\\n        id\\n        name\\n        region\\n        district\\n        score {\\n            kind\\n            description\\n        }\\n        issues {\\n            name\\n            kind\\n            policy\\n            value\\n        }\\n    }\\n}\",\"variables\":{\"id\":`${state_id}`}})\n    });\n\n    if (!response2.ok) {\n        throw new Error('Network response was not ok');\n    }\n    let stateData = await response2.json();\n\n    return stateData\n}\n\nexport {getIssuesData,getStateData}"],"names":["List","constructor","obj","displayStatus","this","style","display","clearList","bind","toggleHide","appendChild","childNode","firstChild","removeChild","Button","text","innerHTML","setAttribute","handleClick","addEventListener","greyOut","removeEventListener","setActive","document","getElementById","myChart","querySelectorAll","forEach","state","fill","issues_list","grapharea","Chart","type","globalCompositeOperation","setColor","score","Info","ele","fontFamily","Set","getElementsByClassName","el","width","height","padding","textAlign","fontSize","instructions","createElement","removeAttribute","cssFloat","github","linkedin","d3","xml","then","data","select","node","append","documentElement","selectAll","on","state_id","event","target","id","async","url","arguments","length","undefined","response2","fetch","method","body","JSON","stringify","ok","Error","json","getStateData","state_name","name","state_issues","description","kind","issues","map","issue","idx","x","y","value","policy","destroy","defaults","font","size","labels","datasets","borderWidth","backgroundColor","options","maintainAspectRatio","plugins","legend","title","tooltip","displayColors","callbacks","label","tooltipItem","raw","scales","beginAtZero","response","getIssuesData","edges","li","textNode","createTextNode","e","states","pathId","querySelector","catch","error","console"],"sourceRoot":""}